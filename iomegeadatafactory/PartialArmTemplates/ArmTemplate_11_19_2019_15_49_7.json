{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "iomegeadatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetProcessableBlobs]"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set Blob Path",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "path",
										"value": {
											"value": "@{item().Path}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Blob Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": {
											"value": "@{item().BlobName}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set container",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Blob Path",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set Blob Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "container",
										"value": {
											"value": "@substring(item().Path, 0, indexof(item().Path, item().BlobName))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set container",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['Region']"
													},
													"sink": {
														"name": "Region",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['Plant']"
													},
													"sink": {
														"name": "Plant",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DeviceId']"
													},
													"sink": {
														"name": "DeviceId",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['Temperature']"
													},
													"sink": {
														"name": "Temperature",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['TemperatureDescription']"
													},
													"sink": {
														"name": "TemperatureDescription",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['Humidity']"
													},
													"sink": {
														"name": "Humidity",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['RecordedTime']"
													},
													"sink": {
														"name": "RecordedTime",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "Json1",
											"type": "DatasetReference",
											"parameters": {
												"path": {
													"value": "@variables('path')",
													"type": "Expression"
												},
												"name": {
													"value": "@variables('name')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSynapseAnalyticsTable1",
											"type": "DatasetReference"
										}
									]
								},
								{
									"name": "Stored Procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[uspUpdateBlobMetadata]",
										"storedProcedureParameters": {
											"dlsLocation": {
												"value": null,
												"type": "String"
											},
											"recordId": {
												"value": {
													"value": "@{item().RecordId}",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"name": {
						"type": "String"
					},
					"path": {
						"type": "String"
					},
					"container": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "RecordID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Plant",
						"type": "nvarchar"
					},
					{
						"name": "DeviceId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Temperature",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TemperatureDescription",
						"type": "nvarchar"
					},
					{
						"name": "Humidity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordedTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DeviceData"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().path",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"path": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().path",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Region": {
							"type": "string"
						},
						"Plant": {
							"type": "string"
						},
						"DeviceId": {
							"type": "integer"
						},
						"Temperature": {
							"type": "integer"
						},
						"TemperatureDescription": {
							"type": "string"
						},
						"Humidity": {
							"type": "integer"
						},
						"RecordedTime": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}